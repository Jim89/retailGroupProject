alternative = "two.sided")
tTest_packs <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_packs <- wilcox.test(avg_weekly_packs ~ cust_type, data = buying.behaviour)
# AVERAGE WEEKLY VOLUME ------------------------------------------------------------------------------------------
var_vol_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol)
var_vol_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol)
var_test_vol <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided")
tTest_vol <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_vol <- wilcox.test(avg_weekly_vol ~ cust_type, data = buying.behaviour)
# Step 3 - tidy up results ----------------------------------------------------------------------------------------
# Tidy up test results and bind into dataframes -------------------------------------------------------------------
var_tests    <- rbind(tidy(var_test_spend), tidy(var_test_visits), tidy(var_test_packs), tidy(var_test_vol))
t_tests      <- rbind(tidy(tTest_spend), tidy(tTest_visits), tidy(tTest_packs), tidy(tTest_vol))
wilcox_tests <- rbind(tidy(wilcox_spend), tidy(wilcox_visits), tidy(wilcox_packs), tidy(wilcox_vol))
# Add variances to var_tests --------------------------------------------------------------------------------------
variances <- data.frame(var_spend_light, var_spend_heavy)
variances <- rbind(variances, c(var_visits_light, var_visits_heavy))
variances <- rbind(variances, c(var_packs_light, var_packs_heavy))
variances <- rbind(variances, c(var_vol_light, var_vol_heavy))
var_tests <- cbind(var_tests, variances)
# Rename columns meaningfully and add ID ('variable') --------------------------------------------------------------
wilcox_tests <- rename(wilcox_tests, mann.whitney.u.statistic = statistic)
var_tests    <- rename(var_tests, f.statistic = statistic)
t_tests      <- rename(t_tests, difference = estimate, mean_heavy = estimate1, mean_light = estimate2)
variables <- c("spend", "visits", "packs", "vol")
wilcox_tests <- cbind(wilcox_tests, variables)
var_tests    <- cbind(var_tests, variables)
t_tests      <- cbind(t_tests, variables)
# Step 4 - clean up, keep only 'tided up' data frames containing test results ---------------------------------------
rm(list= ls()[!(ls() %in% c('t_tests', 'var_tests', 'wilcox_tests'))])
gc(verbose = FALSE)
View(t_tests)
tTest_spend
tTest_spend <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
tTest_spend <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
tTest_spend
View(t_tests)
View(t_tests)
t_tests      <- rename(t_tests, difference = estimate, mean_heavy = estimate1, mean_light = estimate2, df = parameter)
# Step 0 - load packages -------------------------------------------------------------------------------------
library(dplyr)
library(broom)
library(DescTools)
# Step 1 - load data -----------------------------------------------------------------------------------------
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
# Step 2 - analyze differences in average weekly spend/visits/packs/vol in turn ------------------------------
#    The approach is as follows:
# 1. Inspecting variances and formally testing for equality using F-test
# 2. Depending on outcome of F-test testing for significant differences in means
#    using the independent two-samples t-test (equal or unequal variances)
# 3. Testing for equality of the distributions using Wilcoxon-Mann-Whitney test (does not assume ~N())
# AVERAGE WEEKLY SPEND ---------------------------------------------------------------------------------------
var_spend_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend)
var_spend_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend)
var_test_spend <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided")
tTest_spend <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_spend <- wilcox.test(avg_weekly_spend ~ cust_type, data = buying.behaviour)
# AVERAGE WEEKLY VISITS (for weeks in which a trip was made) --------------------------------------------------
var_visits_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits)
var_visits_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits)
var_test_visits <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits,
alternative = "two.sided")
tTest_visits <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_visits <- wilcox.test(avg_weekly_visits ~ cust_type, data = buying.behaviour)
# AVERAGE WEEKLY PACKS ------------------------------------------------------------------------------------------
var_packs_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs)
var_packs_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs)
var_test_packs <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs,
alternative = "two.sided")
tTest_packs <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_packs <- wilcox.test(avg_weekly_packs ~ cust_type, data = buying.behaviour)
# AVERAGE WEEKLY VOLUME ------------------------------------------------------------------------------------------
var_vol_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol)
var_vol_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol)
var_test_vol <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided")
tTest_vol <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_vol <- wilcox.test(avg_weekly_vol ~ cust_type, data = buying.behaviour)
# Step 3 - tidy up results ----------------------------------------------------------------------------------------
# Tidy up test results and bind into dataframes -------------------------------------------------------------------
var_tests    <- rbind(tidy(var_test_spend), tidy(var_test_visits), tidy(var_test_packs), tidy(var_test_vol))
t_tests      <- rbind(tidy(tTest_spend), tidy(tTest_visits), tidy(tTest_packs), tidy(tTest_vol))
wilcox_tests <- rbind(tidy(wilcox_spend), tidy(wilcox_visits), tidy(wilcox_packs), tidy(wilcox_vol))
# Add variances to var_tests --------------------------------------------------------------------------------------
variances <- data.frame(var_spend_light, var_spend_heavy)
variances <- rbind(variances, c(var_visits_light, var_visits_heavy))
variances <- rbind(variances, c(var_packs_light, var_packs_heavy))
variances <- rbind(variances, c(var_vol_light, var_vol_heavy))
var_tests <- cbind(var_tests, variances)
# Rename columns meaningfully and add ID ('variable') --------------------------------------------------------------
wilcox_tests <- rename(wilcox_tests, mann.whitney.u.statistic = statistic)
var_tests    <- rename(var_tests, f.statistic = statistic)
t_tests      <- rename(t_tests, difference = estimate, mean_heavy = estimate1, mean_light = estimate2, df = parameter)
variables <- c("spend", "visits", "packs", "vol")
wilcox_tests <- cbind(wilcox_tests, variables)
var_tests    <- cbind(var_tests, variables)
t_tests      <- cbind(t_tests, variables)
# Step 4 - clean up, keep only 'tided up' data frames containing test results ---------------------------------------
rm(list= ls()[!(ls() %in% c('t_tests', 'var_tests', 'wilcox_tests'))])
gc(verbose = FALSE)
View(t_tests)
View(var_tests)
View(wilcox_tests)
# Step 0 - load packages -------------------------------------------------------------------------------------
library(dplyr)
library(broom)
library(DescTools)
# Step 1 - load data -----------------------------------------------------------------------------------------
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
# Step 2 - analyze differences in average weekly spend/visits/packs/vol in turn ------------------------------
#    The approach is as follows:
# 1. Inspecting variances and formally testing for equality using F-test
# 2. Depending on outcome of F-test testing for significant differences in means
#    using the independent two-samples t-test (equal or unequal variances)
# 3. Testing for equality of the distributions using Wilcoxon-Mann-Whitney test (does not assume ~N())
# AVERAGE WEEKLY SPEND ---------------------------------------------------------------------------------------
var_spend_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend)
var_spend_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend)
var_test_spend <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided")
tTest_spend <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_spend <- wilcox.test(avg_weekly_spend ~ cust_type, data = buying.behaviour)
# AVERAGE WEEKLY VISITS (for weeks in which a trip was made) --------------------------------------------------
var_visits_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits)
var_visits_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits)
var_test_visits <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits,
alternative = "two.sided")
tTest_visits <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_visits <- wilcox.test(avg_weekly_visits ~ cust_type, data = buying.behaviour)
# AVERAGE WEEKLY PACKS ------------------------------------------------------------------------------------------
var_packs_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs)
var_packs_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs)
var_test_packs <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs,
alternative = "two.sided")
tTest_packs <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_packs <- wilcox.test(avg_weekly_packs ~ cust_type, data = buying.behaviour)
# AVERAGE WEEKLY VOLUME ------------------------------------------------------------------------------------------
var_vol_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol)
var_vol_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol)
var_test_vol <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided")
tTest_vol <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_vol <- wilcox.test(avg_weekly_vol ~ cust_type, data = buying.behaviour)
# Step 3 - tidy up results ----------------------------------------------------------------------------------------
# Tidy up test results and bind into dataframes -------------------------------------------------------------------
var_tests    <- rbind(tidy(var_test_spend), tidy(var_test_visits), tidy(var_test_packs), tidy(var_test_vol))
t_tests      <- rbind(tidy(tTest_spend), tidy(tTest_visits), tidy(tTest_packs), tidy(tTest_vol))
wilcox_tests <- rbind(tidy(wilcox_spend), tidy(wilcox_visits), tidy(wilcox_packs), tidy(wilcox_vol))
# Add variances to var_tests --------------------------------------------------------------------------------------
variances <- data.frame(var_spend_light, var_spend_heavy)
variances <- rbind(variances, c(var_visits_light, var_visits_heavy))
variances <- rbind(variances, c(var_packs_light, var_packs_heavy))
variances <- rbind(variances, c(var_vol_light, var_vol_heavy))
var_tests <- cbind(var_tests, variances)
# Rename columns meaningfully and add ID ('variable') --------------------------------------------------------------
wilcox_tests       <- rename(wilcox_tests, mann.whitney.u.statistic = statistic)
t_tests            <- rename(t_tests, difference = estimate, mean_heavy = estimate1, mean_light = estimate2, df = parameter)
var_tests          <- rename(var_tests, f.statistic = statistic)
var_tests$estimate <- NULL
variables    <- c("spend", "visits", "packs", "vol")
wilcox_tests <- cbind(wilcox_tests, variables)
var_tests    <- cbind(var_tests, variables)
t_tests      <- cbind(t_tests, variables)
# Step 4 - clean up, keep only tidy data frames containing test results --------------------------------------------
rm(list= ls()[!(ls() %in% c('t_tests', 'var_tests', 'wilcox_tests'))])
gc(verbose = FALSE)
View(var_tests)
View(var_tests)
# Step 0 - load packages ---------------------------------------------------------------------------------------
library(dplyr)
library(broom)
library(DescTools)
# Step 1 - load data -------------------------------------------------------------------------------------------
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
# Step 2 - analyze differences in average weekly spend/visits/packs/vol in turn --------------------------------
#    The approach is as follows:
# 1. Inspecting variances and formally testing for equality using F-test
# 2. Depending on outcome of F-test testing for significant differences in means
#    using the independent two-samples t-test (equal or unequal variances)
# 3. Testing for equality of the distributions using Wilcoxon-Mann-Whitney test (does not assume ~N())
# ------------------------------------------AVERAGE WEEKLY SPEND -----------------------------------------------
var_spend_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend)
var_spend_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend)
var_test_spend <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided")
tTest_spend <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_spend <- wilcox.test(avg_weekly_spend ~ cust_type, data = buying.behaviour)
# ------------------------------------------AVERAGE WEEKLY VISITS ----------------------------------------------
var_visits_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits)
var_visits_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits)
var_test_visits <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits,
alternative = "two.sided")
tTest_visits <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_visits <- wilcox.test(avg_weekly_visits ~ cust_type, data = buying.behaviour)
# ------------------------------------------AVERAGE WEEKLY PACKS -----------------------------------------------
var_packs_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs)
var_packs_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs)
var_test_packs <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs,
alternative = "two.sided")
tTest_packs <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_packs <- wilcox.test(avg_weekly_packs ~ cust_type, data = buying.behaviour)
# ------------------------------------------AVERAGE WEEKLY VOLUME ----------------------------------------------
var_vol_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol)
var_vol_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol)
var_test_vol <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided")
tTest_vol <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_vol <- wilcox.test(avg_weekly_vol ~ cust_type, data = buying.behaviour)
# Step 3 - tidy up results -------------------------------------------------------------------------------------
# Tidy up test results and bind into dataframes ----------------------------------------------------------------
var_tests    <- rbind(tidy(var_test_spend), tidy(var_test_visits), tidy(var_test_packs), tidy(var_test_vol))
t_tests      <- rbind(tidy(tTest_spend), tidy(tTest_visits), tidy(tTest_packs), tidy(tTest_vol))
wilcox_tests <- rbind(tidy(wilcox_spend), tidy(wilcox_visits), tidy(wilcox_packs), tidy(wilcox_vol))
# Add variances to var_tests -----------------------------------------------------------------------------------
variances <- data.frame(var_spend_light, var_spend_heavy)
variances <- rbind(variances, c(var_visits_light, var_visits_heavy))
variances <- rbind(variances, c(var_packs_light, var_packs_heavy))
variances <- rbind(variances, c(var_vol_light, var_vol_heavy))
var_tests <- cbind(var_tests, variances)
# Rename columns meaningfully and add ID ('variable') ----------------------------------------------------------
wilcox_tests       <- rename(wilcox_tests, mann.whitney.u.statistic = statistic)
t_tests            <- rename(t_tests, difference = estimate, mean_heavy = estimate1,
mean_light = estimate2, df = parameter)
var_tests          <- rename(var_tests, f.statistic = statistic)
var_tests$estimate <- NULL
variables    <- c("spend", "visits", "packs", "vol")
wilcox_tests <- cbind(wilcox_tests, variables)
var_tests    <- cbind(var_tests, variables)
t_tests      <- cbind(t_tests, variables)
# Step 4 - clean up, keep only tidy data frames containing test results ----------------------------------------
rm(list= ls()[!(ls() %in% c('t_tests', 'var_tests', 'wilcox_tests'))])
gc(verbose = FALSE)
View(var_tests)
View(var_tests)
# Step 0 - load packages --------------------------------------------------------------------------------------------------
library(dplyr)
library(broom)
library(DescTools)
# Step 1 - load data -----------------------------------------------------------------------------------------------------
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
brand_breakdown  <- read.csv("./julian/hh_brand_breakdown.csv")
store_breakdown  <- read.csv("./julian/hh_store_breakdown.csv")
brand_breakdown$X <- NULL
store_breakdown$X <- NULL
store_breakdown   <- rename(store_breakdown, store_count = brand_count)
# Step 2 - construct store & brand loyalty measures ----------------------------------------------------------------------
brandL <- group_by(brand_breakdown, house)
brandL <- summarise(brandL, Herfindahl_brand = Herfindahl(brand_count))
storeL <- group_by(store_breakdown, house)
storeL <- summarise(storeL, Herfindahl_store = Herfindahl(store_count))
# Step 3 - joining herfindahl with Buying-behaviour.csv ------------------------------------------------------------------
coffee <- left_join(buying.behaviour, brandL)
coffee <- left_join(buying.behaviour, storeL)
# Step 4 - running Logistic Regression analyses: Herfindahl-index (proxy for loyalty) on cust_type dummy -----------------
mdl_brand_loy  <- glm(Herfindahl_brand~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
mdl_store_loy <- glm(Herfindahl_store~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
# Step 5 - tidy up results -----------------------------------------------------------------------------------------------
tidy_brand_loy <- tidy(mdl_brloy)
tidy_store_loy <- tidy(mdl_strloy)
tidy_loyalty <- rbind(tidy_brand_loy, tidy_store_loy)
variables <- c("brand_loyalty", "brand_loyalty", "store_loyalty", "store_loyalty")
tidy_loyalty <- cbind(tidy_loyalty, variables)
# Step 6 - clean up, keep only 'tided up' dataframes containing test results ---------------------------------------------
rm(list= ls()[!(ls() %in% c('tidy_loyalty'))])
gc(verbose = FALSE)
# Step 0 - load packages --------------------------------------------------------------------------------------------------
library(dplyr)
library(broom)
library(DescTools)
# Step 1 - load data -----------------------------------------------------------------------------------------------------
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
brand_breakdown  <- read.csv("./julian/hh_brand_breakdown.csv")
store_breakdown  <- read.csv("./julian/hh_store_breakdown.csv")
brand_breakdown$X <- NULL
store_breakdown$X <- NULL
store_breakdown   <- rename(store_breakdown, store_count = brand_count)
# Step 2 - construct store & brand loyalty measures ----------------------------------------------------------------------
brandL <- group_by(brand_breakdown, house)
brandL <- summarise(brandL, Herfindahl_brand = Herfindahl(brand_count))
storeL <- group_by(store_breakdown, house)
storeL <- summarise(storeL, Herfindahl_store = Herfindahl(store_count))
# Step 3 - joining herfindahl with Buying-behaviour.csv ------------------------------------------------------------------
coffee <- left_join(buying.behaviour, brandL)
coffee <- left_join(buying.behaviour, storeL)
# Step 4 - running Logistic Regression analyses: Herfindahl-index (proxy for loyalty) on cust_type dummy -----------------
mdl_brand_loy  <- glm(Herfindahl_brand~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
mdl_store_loy <- glm(Herfindahl_store~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
# Step 5 - tidy up results -----------------------------------------------------------------------------------------------
tidy_brand_loy <- tidy(mdl_brloy)
tidy_store_loy <- tidy(mdl_strloy)
tidy_loyalty <- rbind(tidy_brand_loy, tidy_store_loy)
variables <- c("brand_loyalty", "brand_loyalty", "store_loyalty", "store_loyalty")
tidy_loyalty <- cbind(tidy_loyalty, variables)
# Step 0 - load packages --------------------------------------------------------------------------------------------------
library(dplyr)
library(broom)
library(DescTools)
# Step 1 - load data -----------------------------------------------------------------------------------------------------
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
brand_breakdown  <- read.csv("./julian/hh_brand_breakdown.csv")
store_breakdown  <- read.csv("./julian/hh_store_breakdown.csv")
brand_breakdown$X <- NULL
store_breakdown$X <- NULL
store_breakdown   <- rename(store_breakdown, store_count = brand_count)
# Step 2 - construct store & brand loyalty measures ----------------------------------------------------------------------
brandL <- group_by(brand_breakdown, house)
brandL <- summarise(brandL, Herfindahl_brand = Herfindahl(brand_count))
storeL <- group_by(store_breakdown, house)
storeL <- summarise(storeL, Herfindahl_store = Herfindahl(store_count))
# Step 3 - joining herfindahl with Buying-behaviour.csv ------------------------------------------------------------------
coffee <- left_join(buying.behaviour, brandL)
coffee <- left_join(buying.behaviour, storeL)
# Step 4 - running Logistic Regression analyses: Herfindahl-index (proxy for loyalty) on cust_type dummy -----------------
mdl_brand_loy  <- glm(Herfindahl_brand~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
mdl_store_loy <- glm(Herfindahl_store~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
# Step 5 - tidy up results -----------------------------------------------------------------------------------------------
tidy_brand_loy <- tidy(mdl_brand_loy)
tidy_store_loy <- tidy(mdl_store_loy)
tidy_loyalty <- rbind(tidy_brand_loy, tidy_store_loy)
variables <- c("brand_loyalty", "brand_loyalty", "store_loyalty", "store_loyalty")
tidy_loyalty <- cbind(tidy_loyalty, variables)
# Step 6 - clean up, keep only 'tided up' dataframes containing test results ---------------------------------------------
rm(list= ls()[!(ls() %in% c('tidy_loyalty'))])
gc(verbose = FALSE)
# Step 0 - load packages --------------------------------------------------------------------------------------------------
library(dplyr)
library(broom)
library(DescTools)
# Step 1 - load data -----------------------------------------------------------------------------------------------------
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
brand_breakdown  <- read.csv("./julian/hh_brand_breakdown.csv")
store_breakdown  <- read.csv("./julian/hh_store_breakdown.csv")
brand_breakdown$X <- NULL
store_breakdown$X <- NULL
store_breakdown   <- rename(store_breakdown, store_count = brand_count)
# Step 2 - construct store & brand loyalty measures ----------------------------------------------------------------------
brandL <- group_by(brand_breakdown, house)
brandL <- summarise(brandL, Herfindahl_brand = Herfindahl(brand_count))
storeL <- group_by(store_breakdown, house)
storeL <- summarise(storeL, Herfindahl_store = Herfindahl(store_count))
# Step 3 - joining herfindahl with Buying-behaviour.csv ------------------------------------------------------------------
buying.behaviour <- left_join(buying.behaviour, brandL)
buying.behaviour <- left_join(buying.behaviour, storeL)
# Step 4 - running Logistic Regression analyses: Herfindahl-index (proxy for loyalty) on cust_type dummy -----------------
mdl_brand_loy  <- glm(Herfindahl_brand~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
mdl_store_loy  <- glm(Herfindahl_store~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
# Step 5 - tidy up results -----------------------------------------------------------------------------------------------
tidy_brand_loy <- tidy(mdl_brand_loy)
tidy_store_loy <- tidy(mdl_store_loy)
tidy_loyalty   <- rbind(tidy_brand_loy, tidy_store_loy)
variables    <- c("brand_loyalty", "brand_loyalty", "store_loyalty", "store_loyalty")
tidy_loyalty <- cbind(tidy_loyalty, variables)
# Step 6 - clean up, keep only 'tided up' dataframes containing test results ---------------------------------------------
rm(list= ls()[!(ls() %in% c('tidy_loyalty'))])
gc(verbose = FALSE)
View(tidy_loyalty)
# Step 0 - load packages ---------------------------------------------------------------------------------------
library(dplyr)
library(broom)
library(DescTools)
# Step 1 - load data -------------------------------------------------------------------------------------------
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
# Step 2 - analyze differences in average weekly spend/visits/packs/vol in turn --------------------------------
#    The approach is as follows:
# 1. Inspecting variances and formally testing for equality using F-test
# 2. Depending on outcome of F-test testing for significant differences in means
#    using the independent two-samples t-test (equal or unequal variances)
# 3. Testing for equality of the distributions using Wilcoxon-Mann-Whitney test (does not assume ~N())
# ------------------------------------------AVERAGE WEEKLY SPEND -----------------------------------------------
var_spend_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend)
var_spend_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend)
var_test_spend <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided")
tTest_spend <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_spend,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_spend,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_spend <- wilcox.test(avg_weekly_spend ~ cust_type, data = buying.behaviour)
# ------------------------------------------AVERAGE WEEKLY VISITS ----------------------------------------------
var_visits_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits)
var_visits_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits)
var_test_visits <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits,
alternative = "two.sided")
tTest_visits <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_visits,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_visits,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_visits <- wilcox.test(avg_weekly_visits ~ cust_type, data = buying.behaviour)
# ------------------------------------------AVERAGE WEEKLY PACKS -----------------------------------------------
var_packs_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs)
var_packs_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs)
var_test_packs <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs,
alternative = "two.sided")
tTest_packs <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_packs,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_packs,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_packs <- wilcox.test(avg_weekly_packs ~ cust_type, data = buying.behaviour)
# ------------------------------------------AVERAGE WEEKLY VOLUME ----------------------------------------------
var_vol_heavy <- var(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol)
var_vol_light <- var(buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol)
var_test_vol <- var.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided")
tTest_vol <- t.test(buying.behaviour[buying.behaviour$cust_type == "Heavy", ]$avg_weekly_vol,
buying.behaviour[buying.behaviour$cust_type == "Light", ]$avg_weekly_vol,
alternative = "two.sided", var.equal = FALSE, conf.level = 0.95)
wilcox_vol <- wilcox.test(avg_weekly_vol ~ cust_type, data = buying.behaviour)
# Step 3 - tidy up results -------------------------------------------------------------------------------------
# Tidy up test results and bind into dataframes ----------------------------------------------------------------
var_tests    <- rbind(tidy(var_test_spend), tidy(var_test_visits), tidy(var_test_packs), tidy(var_test_vol))
t_tests      <- rbind(tidy(tTest_spend), tidy(tTest_visits), tidy(tTest_packs), tidy(tTest_vol))
wilcox_tests <- rbind(tidy(wilcox_spend), tidy(wilcox_visits), tidy(wilcox_packs), tidy(wilcox_vol))
# Add variances to var_tests -----------------------------------------------------------------------------------
variances <- data.frame(var_spend_light, var_spend_heavy)
variances <- rbind(variances, c(var_visits_light, var_visits_heavy))
variances <- rbind(variances, c(var_packs_light, var_packs_heavy))
variances <- rbind(variances, c(var_vol_light, var_vol_heavy))
var_tests <- cbind(var_tests, variances)
# Rename columns meaningfully and add ID (=variable) -----------------------------------------------------------
wilcox_tests       <- rename(wilcox_tests, mann.whitney.u.statistic = statistic)
t_tests            <- rename(t_tests, difference = estimate, mean_heavy = estimate1,
mean_light = estimate2, df = parameter)
var_tests          <- rename(var_tests, f.statistic = statistic, var_light = var_spend_light,
var_heavy = var_spend_heavy)
var_tests$estimate <- NULL
variables    <- c("spend", "visits", "packs", "vol")
wilcox_tests <- cbind(wilcox_tests, variables)
var_tests    <- cbind(var_tests, variables)
t_tests      <- cbind(t_tests, variables)
# Step 4 - clean up, keep only tidy data frames containing test results ----------------------------------------
rm(list= ls()[!(ls() %in% c('t_tests', 'var_tests', 'wilcox_tests'))])
gc(verbose = FALSE)
# Step 0 - load packages --------------------------------------------------------------------------------------------------
library(dplyr)
library(broom)
library(DescTools)
# Step 1 - load data -----------------------------------------------------------------------------------------------------
buying.behaviour <- read.csv("./data/results/buying_behaviour.csv")
brand_breakdown  <- read.csv("./julian/hh_brand_breakdown.csv")
store_breakdown  <- read.csv("./julian/hh_store_breakdown.csv")
brand_breakdown$X <- NULL
store_breakdown$X <- NULL
store_breakdown   <- rename(store_breakdown, store_count = brand_count)
# Step 2 - construct store & brand loyalty measures ----------------------------------------------------------------------
brandL <- group_by(brand_breakdown, house)
brandL <- summarise(brandL, Herfindahl_brand = Herfindahl(brand_count))
storeL <- group_by(store_breakdown, house)
storeL <- summarise(storeL, Herfindahl_store = Herfindahl(store_count))
# Step 3 - joining herfindahl with Buying-behaviour.csv ------------------------------------------------------------------
buying.behaviour <- left_join(buying.behaviour, brandL)
buying.behaviour <- left_join(buying.behaviour, storeL)
# Step 4 - running Logistic Regression analyses: Herfindahl-index (proxy for loyalty) on cust_type dummy -----------------
mdl_brand_loy  <- glm(Herfindahl_brand~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
mdl_store_loy  <- glm(Herfindahl_store~cust_type, family = binomial(link = "logit"), data = buying.behaviour)
# Step 5 - tidy up results -----------------------------------------------------------------------------------------------
tidy_brand_loy <- tidy(mdl_brand_loy)
tidy_store_loy <- tidy(mdl_store_loy)
tidy_loyalty   <- rbind(tidy_brand_loy, tidy_store_loy)
variables    <- c("brand_loyalty", "brand_loyalty", "store_loyalty", "store_loyalty")
tidy_loyalty <- cbind(tidy_loyalty, variables)
# Step 6 - clean up, keep only 'tided up' dataframes containing test results ---------------------------------------------
rm(list= ls()[!(ls() %in% c('tidy_loyalty'))])
gc(verbose = FALSE)
